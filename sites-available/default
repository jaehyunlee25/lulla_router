##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	#listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;

		if ($request_method = 'OPTIONS') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Content-Type' 'application/json';
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			add_header 'Access-Control-Allow-Methods' 'POST, GET, OPTIONS';
			return 204;
		}

		if ($request_method = 'POST') {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
		}

		if ($request_method = 'GET') {
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
		}

		error_page 405 =200 $uri;
		
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-NginX-Proxy true;
		proxy_ssl_session_reuse off;
		proxy_set_header Host $http_host;
		proxy_redirect off;

		location /api {
			location ~ /auth { proxy_pass http://dev.lulla.co.kr:1000; }
			location ~ /auth/ { proxy_pass http://dev.lulla.co.kr:1000; }
			
			location ~ /school { proxy_pass http://dev.lulla.co.kr:1001; }
			location ~ /school/ { proxy_pass http://dev.lulla.co.kr:1001; }
			location ~ /class { proxy_pass http://dev.lulla.co.kr:1001; }
			location ~ /class/ { proxy_pass http://dev.lulla.co.kr:1001; }
			location ~ /district { proxy_pass http://dev.lulla.co.kr:1001; }
			location ~ /district/ { proxy_pass http://dev.lulla.co.kr:1001; }
			location ~ /institutions { proxy_pass http://dev.lulla.co.kr:1001; }
			location ~ /institutions/ { proxy_pass http://dev.lulla.co.kr:1001; }
			location ~ /member { proxy_pass http://dev.lulla.co.kr:1001; }
			location ~ /member/ { proxy_pass http://dev.lulla.co.kr:1001; }
			location ~ /invite { proxy_pass http://dev.lulla.co.kr:1001; }
			location ~ /invite/ { proxy_pass http://dev.lulla.co.kr:1001; }
			location ~ /announce { proxy_pass http://dev.lulla.co.kr:1001; }
			location ~ /announce/ { proxy_pass http://dev.lulla.co.kr:1001; }
			location ~ /demand { proxy_pass http://dev.lulla.co.kr:1001; }
			location ~ /demand/ { proxy_pass http://dev.lulla.co.kr:1001; }
			

			location ~ /class { proxy_pass http://dev.lulla.co.kr:1002; }
			location ~ /class/ { proxy_pass http://dev.lulla.co.kr:1002; }

			location ~ /file { proxy_pass http://dev.lulla.co.kr:1003; }
			location ~ /file/ { proxy_pass http://dev.lulla.co.kr:1003; }

			location ~ /post { proxy_pass http://dev.lulla.co.kr:1004; }
			location ~ /post/ { proxy_pass http://dev.lulla.co.kr:1004; }

			location ~ /comment { proxy_pass http://dev.lulla.co.kr:1004; }
			location ~ /comment/ { proxy_pass http://dev.lulla.co.kr:1004; }

			location ~ /bookmark { proxy_pass http://dev.lulla.co.kr:1004; }
			location ~ /bookmark/ { proxy_pass http://dev.lulla.co.kr:1004; }

			location ~ /survey { proxy_pass http://dev.lulla.co.kr:1004; }
			location ~ /survey/ { proxy_pass http://dev.lulla.co.kr:1004; }

			location ~ /album { proxy_pass http://dev.lulla.co.kr:1005; }
			location ~ /album/ { proxy_pass http://dev.lulla.co.kr:1005; }

			location ~ /send { proxy_pass http://dev.lulla.co.kr:1006; }
			location ~ /send/ { proxy_pass http://dev.lulla.co.kr:1006; }
		}

	}

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
